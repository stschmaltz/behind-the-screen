---
description: 
globs: 
alwaysApply: true
---
# Git Workflow

Follow these practices when working on the codebase:

## Commit Guidelines
- Commit your changes after each completed task or logical unit of work
- Write clear, descriptive commit messages explaining what changed and why
- Use present tense in commit messages (e.g. "Fix character deletion bug" not "Fixed")
- Keep commits focused on a single concern

## Workflow Steps
1. Create a branch for your feature or fix
2. Make your changes in small, logical units
3. Commit after each completed task
4. Write tests when appropriate
5. Push your branch and create a pull request

When refactoring code, separate pure refactoring commits from feature changes to make review easier.

## Important
Always verify your changes work before committing by testing the affected functionality. Run linters and type checks (`npm run lint`) before committing to ensure code quality.
